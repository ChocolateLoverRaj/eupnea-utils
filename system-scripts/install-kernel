#!/usr/bin/env python3

import os
import sys
import json
import argparse

sys.path.insert(0, "/usr/lib/eupnea")
from functions import *


# parse arguments from the cli.
def process_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--kernel-path", required=True, dest="kernel_path",
                        help="Full path to kernel image to be installed. Example: /tmp/bzImage-new")
    parser.add_argument("--partition", dest="partition", default=1, help="Partition to flash kernel to. Defaults to 1")
    return parser.parse_args()


if __name__ == "__main__":
    args = process_args()

    # Restart script as root
    if os.geteuid() != 0:
        sudo_args = ['sudo', sys.executable] + sys.argv + [os.environ]
        os.execlpe('sudo', *sudo_args)

    # prepare system
    rmdir("/tmp/kernel-update")  # delete old files
    mkdir("/tmp/kernel-update")

    cpfile(args.kernel_path, "/tmp/kernel-update/bzImage")  # Copy image to temporary location
    cpfile("/proc/cmdline", "/tmp/kernel-update/kernel.flags")  # Reuse current kernel flags
    # read root partition mount
    root_part = bash("mount | grep ' / ' | cut -d' ' -f 1")

    print_status("Signing kernel")
    bash("futility vbutil_kernel --arch x86_64 --version 1 --keyblock /usr/share/vboot/devkeys/kernel.keyblock "
         "--signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk --bootloader /tmp/kernel-update/kernel.flags "
         "--config /tmp/kernel-update/kernel.flags --vmlinuz /tmp/kernel-update/bzImage --pack "
         "/tmp/kernel-update/bzImage.signed")

    print_status("Flashing kernel")
    # get device "name"
    device = root_part[:-1]
    bash(f"dd if=/tmp/kernel-update/bzImage.signed of={device}{args.partition}")

    # if on Fedora, the modules need to be relabeled, otherwise SELinux will not allow loading them
    with open("/etc/eupnea.json", "r") as file:
        stored_settings = json.load(file)
    if stored_settings["distro_name"] == "fedora":
        print_status("Relabeling modules")
        bash("fixfiles restore /lib/modules")
